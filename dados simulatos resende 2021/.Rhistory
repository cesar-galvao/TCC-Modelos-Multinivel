geom_line(data = blup0, aes(reorder(Genotype,blup), value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean(blup0$blup), slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup), blup_value))+
geom_point(position = "identity")
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)
blup2_ic <- blup2 %>%
inner_join(ep_of_random_effects2) %>%
mutate(
LS = blup_value + qnorm(0.975)*ep,
LI = blup_value - qnorm(0.975)*ep) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC", values_to = "ic_value") %>%
mutate(color = ifelse(max(ic_value) <  mean_blup| min(ic_value) > mean_blup, "red", "black"))
blup2_ic
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid = element_blank())
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))
blup2_ic <- blup2 %>%
inner_join(ep_of_random_effects2) %>%
mutate(
LS = blup_value + qnorm(0.975)*ep,
LI = blup_value - qnorm(0.975)*ep) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC", values_to = "ic_value") %>%
mutate(color = ifelse(max(ic_value) <  mean_blup| min(ic_value) > mean_blup, "red", "black"),
combined_group = interaction(Genotype, blup))
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = combined_group,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid = element_blank())
View(blup2_ic)
# Example data
set.seed(42)
your_data <- data.frame(
x = rnorm(100),
y = rnorm(100),
group1 = rep(c("A", "B"), each = 50),
group2 = rep(c("C", "D"), each = 50)
)
# Creating an interaction variable
your_data$combined_group <- interaction(your_data$group1, your_data$group2)
# Plotting with two variables as the grouping variable
ggplot(your_data, aes(x = x, y = y, color = combined_group)) +
geom_point() +
theme_minimal()
your_data
blup2_ic <- blup2 %>%
inner_join(ep_of_random_effects2) %>%
mutate(
LS = blup_value + qnorm(0.975)*ep,
LI = blup_value - qnorm(0.975)*ep) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC", values_to = "ic_value") %>%
mutate(color = ifelse(max(ic_value) <  mean_blup| min(ic_value) > mean_blup, "red", "black"),
combined_group = interaction(Genotype, blup, color))
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = combined_group,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid = element_blank())
blup2_ic <- blup2 %>%
inner_join(ep_of_random_effects2) %>%
mutate(
LS = blup_value + qnorm(0.975)*ep,
LI = blup_value - qnorm(0.975)*ep) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC", values_to = "ic_value") %>%
mutate(color = ifelse(max(ic_value) <  mean_blup| min(ic_value) > mean_blup, "red", "black"),
combined_group = interaction(Genotype, blup))
View(blup2_ic)
blup2_ic <- blup2 %>%
inner_join(ep_of_random_effects2) %>%
mutate(
LS = blup_value + qnorm(0.975)*ep,
LI = blup_value - qnorm(0.975)*ep) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC", values_to = "ic_value") %>%
mutate(color = factor(ifelse(max(ic_value) <  mean_blup| min(ic_value) > mean_blup, "red", "black")),
combined_group = interaction(Genotype, blup))
View(blup2_ic)
blup2_ic <- blup2 %>%
inner_join(ep_of_random_effects2) %>%
mutate(
LS = blup_value + qnorm(0.975)*ep,
LI = blup_value - qnorm(0.975)*ep) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC", values_to = "ic_value") %>%
group_by(Genotype) %>%
mutate(color = factor(ifelse(max(ic_value) <  mean_blup| min(ic_value) > mean_blup, "red", "black")),)
blup2_ic <- blup2 %>%
inner_join(ep_of_random_effects2) %>%
mutate(
LS = blup_value + qnorm(0.975)*ep,
LI = blup_value - qnorm(0.975)*ep) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC", values_to = "ic_value") %>%
group_by(Genotype, blup) %>%
mutate(color = factor(ifelse(max(ic_value) <  mean_blup| min(ic_value) > mean_blup, "red", "black")),)
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = combined_group,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid = element_blank())
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid = element_blank())
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(blup_value, ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid = element_blank())
blup2_ic %>%
ggplot(aes(reorder(Genotype,blup_value), blup_value))+
geom_point(position = "identity")+
geom_line(data = blup2_ic, aes(reorder(Genotype,blup_value), ic_value, group = Genotype,
color = color))+
scale_color_manual(values = c("gray", "red"))+
geom_abline(intercept = mean_blup, slope = 0, aes(color = "red", linetype = "dashed"))+
guides(color = FALSE)+
facet_wrap(~blup)+
labs(y = "BLUP", x = "")+
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid = element_blank())
# Encerramento de sessão ----
end_session()
rm(list = ls()),
end_session <- function(){
rm(list = ls(envir = parent.frame()))
gc()}
# Encerramento de sessão ----
end_session()
?ls
rm(end_session)
amb <- read.table("envdat.txt") %>%
mutate(experimento = ifelse(is.na(Trial), 0, 1),
text = ifelse(!is.na(Trial),str_sub(Trial, start = 3), ""))
# mapa de onde teve trial
amb %>%
ggplot(aes(x = Longitude, y = Latitude,
fill = factor(experimento,
levels = c(0,1),
labels = c("Sem experimento", "Com experimento")))) +
geom_tile(color = "lightgray") +
scale_fill_manual(values = c("white", "black")) +
geom_text(label = amb$text, vjust = -.5)+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())+
labs(fill = "Experimento")
# ilustrar heat map de uma das variaveis
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = EA005)) +
scale_fill_gradientn(colours = rev(jet.colors(7))) +
geom_point(data = amb[!is.na(amb$Trial),],aes(Longitude,Latitude), size = 2,
shape = 3)+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
# clusterizar e ver média de yield por região
matriz <- amb %>%
dplyr::select(starts_with("EA")) %>%
as.matrix() %>%
scale()
cluster_table <- tibble(cent = 1:20)%>%
mutate(withinss = map_vec(cent, function(x){kmeans(matriz, centers = x)$tot.withinss}))
cluster_table %>%
ggplot(aes(cent, withinss))+
geom_point()+
theme_bw()
# gera clusters
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 5))$cluster))
rm(matriz)
# plot dos clusters
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = cluster)) +
scale_fill_brewer()+
labs(fill = "Cluster")+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
# dataset de yield e clusters para avaliar IC
desc_clusters <- amb %>%
dplyr::select(Trial, cluster) %>%
inner_join(feno) %>%
group_by(cluster) %>%
summarise(
n = n(),
mean_yield = mean(Yield),
sigma_i = var(Yield)
) %>%
ungroup() %>%
mutate(mu = mean(mean_yield), #tem n = 100, da para usar normal ja
LI = mean_yield - qnorm(.975)*sqrt(sigma_i),
LS = mean_yield + qnorm(.975)*sqrt(sigma_i)) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC")
#IC de cada trial, ordenado, comparados à média geral
ggplot(desc_clusters, aes(reorder(cluster, mean_yield), mean_yield))+
geom_point()+
geom_line(data = desc_clusters, aes(cluster,value, group = cluster))+
geom_abline(intercept = desc_clusters$mu, slope = 0, color = "red", linetype = "dashed")+
theme_bw()
cluster_table %>%
ggplot(aes(cent, withinss))+
geom_point()+
labs(x = "Centróides", y = "SQ dentro de clusters")
cluster_table %>%
ggplot(aes(cent, withinss))+
geom_point()+
labs(x = "Centróides", y = "SQ dentro de clusters")+
theme_bw()
cluster_table %>%
ggplot(aes(cent, withinss))+
geom_point()+
labs(x = "Centróides", y = "SQ dentro de clusters")+
theme_bw()
# gera clusters
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 5))$cluster))
amb <- read.table("envdat.txt") %>%
mutate(experimento = ifelse(is.na(Trial), 0, 1),
text = ifelse(!is.na(Trial),str_sub(Trial, start = 3), ""))
# mapa de onde teve trial
amb %>%
ggplot(aes(x = Longitude, y = Latitude,
fill = factor(experimento,
levels = c(0,1),
labels = c("Sem experimento", "Com experimento")))) +
geom_tile(color = "lightgray") +
scale_fill_manual(values = c("white", "black")) +
geom_text(label = amb$text, vjust = -.5)+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())+
labs(fill = "Experimento")
# ilustrar heat map de uma das variaveis
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = EA005)) +
scale_fill_gradientn(colours = rev(jet.colors(7))) +
geom_point(data = amb[!is.na(amb$Trial),],aes(Longitude,Latitude), size = 2,
shape = 3)+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
# clusterizar e ver média de yield por região
matriz <- amb %>%
dplyr::select(starts_with("EA")) %>%
as.matrix() %>%
scale()
cluster_table <- tibble(cent = 1:20)%>%
mutate(withinss = map_vec(cent, function(x){kmeans(matriz, centers = x)$tot.withinss}))
cluster_table %>%
ggplot(aes(cent, withinss))+
geom_point()+
labs(x = "Centróides", y = "SQ dentro de clusters")+
theme_bw()
# gera clusters
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 5))$cluster))
rm(matriz)
# plot dos clusters
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = cluster)) +
scale_fill_brewer()+
labs(fill = "Cluster")+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
# dataset de yield e clusters para avaliar IC
desc_clusters <- amb %>%
dplyr::select(Trial, cluster) %>%
inner_join(feno) %>%
group_by(cluster) %>%
summarise(
n = n(),
mean_yield = mean(Yield),
sigma_i = var(Yield)
) %>%
ungroup() %>%
mutate(mu = mean(mean_yield), #tem n = 100, da para usar normal ja
LI = mean_yield - qnorm(.975)*sqrt(sigma_i),
LS = mean_yield + qnorm(.975)*sqrt(sigma_i)) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC")
#IC de cada trial, ordenado, comparados à média geral
ggplot(desc_clusters, aes(reorder(cluster, mean_yield), mean_yield))+
geom_point()+
geom_line(data = desc_clusters, aes(cluster,value, group = cluster))+
geom_abline(intercept = desc_clusters$mu, slope = 0, color = "red", linetype = "dashed")+
theme_bw()
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 3))$cluster))
matriz <- amb %>%
dplyr::select(starts_with("EA")) %>%
as.matrix() %>%
scale()
cluster_table <- tibble(cent = 1:20)%>%
mutate(withinss = map_vec(cent, function(x){kmeans(matriz, centers = x)$tot.withinss}))
cluster_table %>%
ggplot(aes(cent, withinss))+
geom_point()+
labs(x = "Centróides", y = "SQ dentro de clusters")+
theme_bw()
# gera clusters
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 3))$cluster))
rm(matriz)
# plot dos clusters
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = cluster)) +
scale_fill_brewer()+
labs(fill = "Cluster")+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 4))$cluster))
matriz <- amb %>%
dplyr::select(starts_with("EA")) %>%
as.matrix() %>%
scale()
cluster_table <- tibble(cent = 1:20)%>%
mutate(withinss = map_vec(cent, function(x){kmeans(matriz, centers = x)$tot.withinss}))
cluster_table %>%
ggplot(aes(cent, withinss))+
geom_point()+
labs(x = "Centróides", y = "SQ dentro de clusters")+
theme_bw()
# gera clusters
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 4))$cluster))
# plot dos clusters
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = cluster)) +
scale_fill_brewer()+
labs(fill = "Cluster")+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
# gera clusters
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 5))$cluster))
# plot dos clusters
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = cluster)) +
scale_fill_brewer()+
labs(fill = "Cluster")+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 6))$cluster))
# plot dos clusters
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = cluster)) +
scale_fill_brewer()+
labs(fill = "Cluster")+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
# gera clusters
amb <- amb %>%
mutate(cluster = factor((kmeans(matriz, centers = 7))$cluster))
# plot dos clusters
ggplot(amb) +
geom_tile(aes(Longitude, Latitude, fill = cluster)) +
scale_fill_brewer()+
labs(fill = "Cluster")+
theme_minimal()+
theme(axis.line = element_blank(),
panel.grid = element_blank())
desc_clusters <- amb %>%
dplyr::select(Trial, cluster) %>%
inner_join(feno) %>%
group_by(cluster) %>%
summarise(
n = n(),
mean_yield = mean(Yield),
sigma_i = var(Yield)
) %>%
ungroup() %>%
mutate(mu = mean(mean_yield), #tem n = 100, da para usar normal ja
LI = mean_yield - qnorm(.975)*sqrt(sigma_i),
LS = mean_yield + qnorm(.975)*sqrt(sigma_i)) %>%
pivot_longer(cols = c(LS, LI), names_to = "IC")
#IC de cada trial, ordenado, comparados à média geral
ggplot(desc_clusters, aes(reorder(cluster, mean_yield), mean_yield))+
geom_point()+
geom_line(data = desc_clusters, aes(cluster,value, group = cluster))+
geom_abline(intercept = desc_clusters$mu, slope = 0, color = "red", linetype = "dashed")+
theme_bw()
ENVsel
modfix4 <- lm(formula(paste0("Yield ~ ",str_c(ENVsel[-c(1, 4, 7)], collapse = " + "))))
# análise de resíduos
source("envelope_function.R")
envelope_LR(modfix4, OLS = T, main.title = "Resíduos com envelope")
modfix4 <- lm(formula(paste0("Yield ~ ",str_c(ENVsel[-c(1, 4, 7)], collapse = " + "))))
pacman::p_load(tidyverse, scales, sommer, car, corrplot, lme4, magrittr)
modfix4 <- lm(formula(paste0("Yield ~ ",str_c(ENVsel[-c(1, 4, 7)], collapse = " + "))))
modfix4 <- lm(formula(paste0("Yield ~ ",str_c(ENVsel[-c(1, 4, 7)], collapse = " + "))),
data = envmrk_data)
# análise de resíduos
source("envelope_function.R")
envelope_LR(modfix4, OLS = T, main.title = "Resíduos com envelope")
